#!/bin/bash
# Matthew, Ashley, Lucy, Ryan
# valgrind.sh
# 5/31/22
#
# general valgrind tests for sudoku.c

###### valgrind test ######

echo "-----------Memory Test-----------"
-----------Memory Test-----------
VALGRIND='valgrind --leak-check=full --show-leak-kinds=all'

## solve ##
# Testing with three solvable boards, one incorrect board, and an empty board
$VALGRIND ./sudoku solve < testBoards/tb1
==20378== Memcheck, a memory error detector
==20378== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20378== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20378== Command: ./sudoku solve
==20378== 
Solving sudoku puzzle
7 1 6 4 2 5 8 3 9 
5 9 4 8 1 3 2 7 6 
2 8 3 7 6 9 4 1 5 
8 5 2 3 9 6 7 4 1 
6 4 7 1 5 8 9 2 3 
1 3 9 2 4 7 5 6 8 
4 6 8 9 3 2 1 5 7 
9 2 5 6 7 1 3 8 4 
3 7 1 5 8 4 6 9 2 
==20378== 
==20378== HEAP SUMMARY:
==20378==     in use at exit: 0 bytes in 0 blocks
==20378==   total heap usage: 13 allocs, 13 frees, 16,788 bytes allocated
==20378== 
==20378== All heap blocks were freed -- no leaks are possible
==20378== 
==20378== For counts of detected and suppressed errors, rerun with: -v
==20378== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
$VALGRIND ./sudoku solve < testBoards/tb2
==20384== Memcheck, a memory error detector
==20384== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20384== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20384== Command: ./sudoku solve
==20384== 
Solving sudoku puzzle
8 6 3 2 7 4 1 9 5 
5 4 7 9 1 6 2 3 8 
9 2 1 3 8 5 4 7 6 
6 7 9 4 3 2 5 8 1 
1 8 5 7 6 9 3 4 2 
4 3 2 1 5 8 7 6 9 
2 9 6 5 4 7 8 1 3 
3 5 4 8 9 1 6 2 7 
7 1 8 6 2 3 9 5 4 
==20384== 
==20384== HEAP SUMMARY:
==20384==     in use at exit: 0 bytes in 0 blocks
==20384==   total heap usage: 13 allocs, 13 frees, 16,788 bytes allocated
==20384== 
==20384== All heap blocks were freed -- no leaks are possible
==20384== 
==20384== For counts of detected and suppressed errors, rerun with: -v
==20384== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
$VALGRIND ./sudoku solve < testBoards/tb3
==20394== Memcheck, a memory error detector
==20394== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20394== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20394== Command: ./sudoku solve
==20394== 
Solving sudoku puzzle
2 9 5 7 4 3 8 6 1 
4 3 1 8 6 5 9 2 7 
8 7 6 1 9 2 5 4 3 
3 8 7 4 5 9 2 1 6 
6 1 2 3 8 7 4 9 5 
5 4 9 2 1 6 7 3 8 
7 6 3 5 3 4 1 8 9 
9 2 8 6 7 1 3 5 4 
1 5 4 9 3 8 6 7 2 
==20394== 
==20394== HEAP SUMMARY:
==20394==     in use at exit: 0 bytes in 0 blocks
==20394==   total heap usage: 13 allocs, 13 frees, 16,788 bytes allocated
==20394== 
==20394== All heap blocks were freed -- no leaks are possible
==20394== 
==20394== For counts of detected and suppressed errors, rerun with: -v
==20394== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
$VALGRIND ./sudoku solve < testBoards/nosolution
==20420== Memcheck, a memory error detector
==20420== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20420== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20420== Command: ./sudoku solve
==20420== 
sudoku not solvable
Solving sudoku puzzle
==20420== 
==20420== HEAP SUMMARY:
==20420==     in use at exit: 0 bytes in 0 blocks
==20420==   total heap usage: 13 allocs, 13 frees, 16,788 bytes allocated
==20420== 
==20420== All heap blocks were freed -- no leaks are possible
==20420== 
==20420== For counts of detected and suppressed errors, rerun with: -v
==20420== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
$VALGRIND ./sudoku solve < testBoards/empty
==20453== Memcheck, a memory error detector
==20453== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20453== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20453== Command: ./sudoku solve
==20453== 
Solving sudoku puzzle
1 2 3 4 5 6 7 8 9 
4 5 6 7 8 9 1 2 3 
7 8 9 1 2 3 4 5 6 
2 1 4 3 6 5 8 9 7 
3 6 5 8 9 7 2 1 4 
8 9 7 2 1 4 3 6 5 
5 3 1 6 4 2 9 7 8 
6 4 2 9 7 8 5 3 1 
9 7 8 5 3 1 6 4 2 
==20453== 
==20453== HEAP SUMMARY:
==20453==     in use at exit: 0 bytes in 0 blocks
==20453==   total heap usage: 13 allocs, 13 frees, 16,788 bytes allocated
==20453== 
==20453== All heap blocks were freed -- no leaks are possible
==20453== 
==20453== For counts of detected and suppressed errors, rerun with: -v
==20453== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

## create ##
$VALGRIND ./sudoku create easy
==20455== Memcheck, a memory error detector
==20455== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20455== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20455== Command: ./sudoku create easy
==20455== 
Creating new easy sudoku puzzle
0 5 0 0 0 0 3 0 7 
0 0 6 3 5 1 2 4 9 
1 0 3 0 0 4 8 0 5 
2 0 0 0 4 9 5 0 6 
6 0 0 2 8 0 9 3 1 
0 8 1 0 0 3 0 0 2 
0 2 0 8 0 0 1 5 4 
5 6 0 0 0 0 0 9 3 
0 0 0 0 0 0 6 0 8 
==20455== 
==20455== HEAP SUMMARY:
==20455==     in use at exit: 0 bytes in 0 blocks
==20455==   total heap usage: 4,904 allocs, 4,904 frees, 185,364 bytes allocated
==20455== 
==20455== All heap blocks were freed -- no leaks are possible
==20455== 
==20455== For counts of detected and suppressed errors, rerun with: -v
==20455== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
$VALGRIND ./sudoku create medium
==20596== Memcheck, a memory error detector
==20596== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20596== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20596== Command: ./sudoku create medium
==20596== 
Creating new medium sudoku puzzle
0 2 0 0 1 0 7 0 0 
0 0 3 8 0 0 2 6 1 
4 0 7 0 0 6 9 0 5 
0 0 0 0 0 0 1 0 2 
0 0 2 3 0 0 4 7 9 
0 3 0 0 0 0 0 0 6 
0 6 0 4 0 0 5 0 7 
8 0 0 6 0 0 0 1 4 
0 0 0 0 0 0 6 0 0 
==20596== 
==20596== HEAP SUMMARY:
==20596==     in use at exit: 0 bytes in 0 blocks
==20596==   total heap usage: 2,247 allocs, 2,247 frees, 89,872 bytes allocated
==20596== 
==20596== All heap blocks were freed -- no leaks are possible
==20596== 
==20596== For counts of detected and suppressed errors, rerun with: -v
==20596== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
$VALGRIND ./sudoku create hard
==20597== Memcheck, a memory error detector
==20597== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20597== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20597== Command: ./sudoku create hard
==20597== 
Creating new hard sudoku puzzle
0 0 8 0 0 0 0 0 4 
4 0 0 1 0 0 0 8 0 
6 2 9 0 0 0 0 0 5 
1 0 0 0 0 0 0 5 2 
9 0 0 0 1 0 0 7 3 
0 0 0 0 0 0 0 9 0 
0 0 1 0 0 0 0 4 6 
3 0 0 6 0 0 0 0 8 
0 0 2 0 0 8 0 3 0 
==20597== 
==20597== HEAP SUMMARY:
==20597==     in use at exit: 0 bytes in 0 blocks
==20597==   total heap usage: 5,166 allocs, 5,166 frees, 195,100 bytes allocated
==20597== 
==20597== All heap blocks were freed -- no leaks are possible
==20597== 
==20597== For counts of detected and suppressed errors, rerun with: -v
==20597== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

## fuzz ##
$VALGRIND ./fuzz check testBoards/solved
==21752== Memcheck, a memory error detector
==21752== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21752== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21752== Command: ./fuzz check testBoards/solved
==21752== 
Solver has no duplicate or sum errors!! 
passed 
==21752== 
==21752== HEAP SUMMARY:
==21752==     in use at exit: 0 bytes in 0 blocks
==21752==   total heap usage: 114 allocs, 114 frees, 19,518 bytes allocated
==21752== 
==21752== All heap blocks were freed -- no leaks are possible
==21752== 
==21752== For counts of detected and suppressed errors, rerun with: -v
==21752== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
$VALGRIND ./fuzz filled testBoards/unsolved testBoards/solved
==21756== Memcheck, a memory error detector
==21756== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21756== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21756== Command: ./fuzz filled testBoards/unsolved testBoards/solved
==21756== 
Solver -successfully- filled in the correct slots! 
passed 
==21756== 
==21756== HEAP SUMMARY:
==21756==     in use at exit: 0 bytes in 0 blocks
==21756==   total heap usage: 47 allocs, 47 frees, 28,108 bytes allocated
==21756== 
==21756== All heap blocks were freed -- no leaks are possible
==21756== 
==21756== For counts of detected and suppressed errors, rerun with: -v
==21756== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
